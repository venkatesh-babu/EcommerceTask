{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor() {\n      this.cartItemList = [];\n      this.initialValue = [];\n      this.productList = new BehaviorSubject([]);\n    }\n\n    getProducts() {\n      return this.productList.asObservable();\n    }\n\n    addtoCart(product) {\n      this.cartItemList.push(product);\n      this.productList.next(this.cartItemList);\n      this.initialValue.push({\n        initialPrice: product.price,\n        productId: product.id\n      });\n    }\n\n    updateCart(product, total, id) {\n      this.cartItemList.map((a, index) => {\n        if (product.id == a.id) {\n          this.cartItemList[index].price = total;\n        }\n      });\n    }\n\n    deletCart(product) {\n      this.cartItemList.map((a, index) => {\n        if (product.id === a.id) {\n          this.cartItemList.splice(index, 1);\n        }\n      });\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}